name: Java CI

on:
  push:
    branches:
      - main
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on: [ self-hosted, Linux, greengrass ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          # Only restore maven cache for this exact commit. If we start incrementing the version
          # of our Java SDK, then we can relax this to just the "hashFiles" and exclude "sha"
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ github.sha }}
      - run: rm -rf /tmp/*
        continue-on-error: true
      - name: Build with Gradle
        run: ./gradlew clean test --refresh-dependencies
      - name: Upload Failed Test Report
        uses: actions/upload-artifact@v1.0.0
        if: failure()
        with:
          name: Failed Test Report
          path: greengrass-mqtt-broker/build/test-results/test
      - name: Upload Coverage
        uses: actions/upload-artifact@v1.0.0
        if: always()
        with:
          name: Coverage Report
          path: greengrass-mqtt-broker/build/jacoco-report
      - name: Convert Jacoco unit test report to Cobertura
        run: python3 .github/scripts/cover2cover.py greengrass-mqtt-broker/build/jacoco-report/test/jacocoTestReport.xml > greengrass-mqtt-broker/build/jacoco-report/test/cobertura.xml
      - name: cobertura-report-unit-test
        uses: shaguptashaikh/cobertura-action@master
        continue-on-error: true
        with:
          # The GITHUB_TOKEN for this repo
          repo_token: ${{ github.token }}
          # Path to the cobertura file.
          path: greengrass-mqtt-broker/build/jacoco-report/test/cobertura.xml
          # If files with 100% should be skipped from report.
          skip_covered: false
          # Minimum allowed coverage percentage as an integer.
          minimum_coverage: 50 #TODO: Increase the coverage. Currently some of the service code is not testable
          # Show line rate as specific column.
          show_line: true
          # Show branch rate as specific column.
          show_branch: true
          # Use class names instead of the filename
          show_class_names: true
          # Use a unique name for the report and comment
          report_name: Unit Tests Coverage Report

  publish:
    needs: build
    runs-on: [ self-hosted, Linux, greengrass ]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Checkout Private Action
        uses: daspn/private-actions-checkout@v2
        with:
          actions_list: '["aws/aws-greengrass-component-upload-action@master"]'
          checkout_base_path: ./.github/actions
          ssh_private_key: ${{ secrets.COMPONENT_UPLOAD_ACTION_PRIVATE_KEY }}
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Package with Gradle
        run: ./gradlew build -x test
      - run: sudo apt-get install -y awscli
      - run: mkdir -p target/artifacts && cp greengrass-mqtt-broker/build/libs/aws.greengrass.mqtt.broker-0.12.1-fat-jar.jar  target/artifacts/aws.greengrass.Mqtt.jar
      - uses: ./.github/actions/aws-greengrass-component-upload-action
        name: Upload to GCS Gamma
        env:
          AWS_REGION: us-east-1
        with:
          recipePath: recipe.yaml
          artifactDirectoryPath: target/artifacts
          endpoint: https://evergreen-gamma.us-east-1.amazonaws.com
          autoBumpVersion: true
          publishAsPublic: false
          additionalReplacements: '{"stage": "gamma"}'
      - uses: ./.github/actions/aws-greengrass-component-upload-action
        name: Upload to GCS Prod
        env:
          AWS_REGION: us-east-1
        with:
          recipePath: recipe.yaml
          artifactDirectoryPath: target/artifacts
          endpoint: https://evergreen.us-east-1.amazonaws.com
          autoBumpVersion: true
          publishAsPublic: false
          additionalReplacements: '{"stage": "prod"}'
